using Content.Shared._Sunrise.Contributors;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Input;

namespace Content.Client._Sunrise.Contributors;

[GenerateTypedNameReferences]
public sealed partial class ContributorEntryControl : PanelContainer
{
    private static readonly Color NormalColor = Color.FromHex("#202023");
    private static readonly Color HoverColor = Color.FromHex("#2F2F33");

    public ContributorEntryControl()
    {
        RobustXamlLoader.Load(this);
        TooltipDelay = 0.5f;

        BackgroundColorPanel.PanelOverride = new StyleBoxFlat
        {
            BackgroundColor = NormalColor
        };

        BackgroundColorPanel.OnMouseEntered += args =>
        {
            var panel = (StyleBoxFlat)BackgroundColorPanel.PanelOverride!;
            panel.BackgroundColor = HoverColor;
        };

        BackgroundColorPanel.OnMouseExited += args =>
        {
            var panel = (StyleBoxFlat)BackgroundColorPanel.PanelOverride!;
            panel.BackgroundColor = NormalColor;
        };
    }

    public void UpdateData(ContributorEntry entry)
    {
        SS14UsernameLabel.Text = entry.SS14Username;
        GithubLoginLabel.Text = entry.GithubLogin;
        ContributionsLabel.Text = entry.Contributions.ToString();

        BackgroundColorPanel.OnKeyBindDown += args =>
        {
            if (args.Function != EngineKeyFunctions.Use)
                return;

            OpenGitHubProfile(entry.GithubLogin);
        };
    }

    private void OpenGitHubProfile(string githubLogin)
    {
        if (string.IsNullOrEmpty(githubLogin))
            return;

        IoCManager.Resolve<IUriOpener>().OpenUri(new Uri($"https://github.com/{githubLogin}"));
    }
}
